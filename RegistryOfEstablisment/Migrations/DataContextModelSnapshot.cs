// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RegistryOfEstablisment.Model;

namespace RegistryOfEstablisment.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.Enterprise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int>("Checkpoint")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<long>("ITN")
                        .HasColumnType("bigint");

                    b.Property<string>("LegalEntity")
                        .HasColumnType("text");

                    b.Property<int?>("ManagementTerritoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RealAddress")
                        .HasColumnType("text");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("text");

                    b.Property<int?>("TypeId")
                        .HasColumnType("integer");

                    b.Property<string>("WebSite")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ManagementTerritoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.EnterpriseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EnterpriseTypes");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.ManagementTerritory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ManagementTerritories");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EnterpriseId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PetName")
                        .HasColumnType("text");

                    b.Property<string>("PetType")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.HasIndex("UserId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<int?>("ManagementTerritoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ManagementTerritoryId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.Enterprise", b =>
                {
                    b.HasOne("RegistryOfEstablisment.Model.Entities.ManagementTerritory", "ManagementTerritory")
                        .WithMany()
                        .HasForeignKey("ManagementTerritoryId");

                    b.HasOne("RegistryOfEstablisment.Model.Entities.EnterpriseType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("ManagementTerritory");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.Registration", b =>
                {
                    b.HasOne("RegistryOfEstablisment.Model.Entities.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId");

                    b.HasOne("RegistryOfEstablisment.Model.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Enterprise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RegistryOfEstablisment.Model.Entities.User", b =>
                {
                    b.HasOne("RegistryOfEstablisment.Model.Entities.ManagementTerritory", "ManagementTerritory")
                        .WithMany()
                        .HasForeignKey("ManagementTerritoryId");

                    b.HasOne("RegistryOfEstablisment.Model.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("ManagementTerritory");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
